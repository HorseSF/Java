/*
 *Javaプログラミング基礎
 *	Javaテクノロジーの概要
 *		→特徴
 *		①Write Once,Run Anywhere
 *		②Java実行環境（JVM）による処理
 *		③オプジェクト指向
 *	Java環境のセットアップ
 *		→JDKインストール、Path環境変数の設定
 *	Javaプログラムのコンパイルと実行
 *		1_コーディング
 *			Java言語で決められたルールに従って、プログラムを記述します。
 *			※半角数字を使用
 *			※ソースファイル拡張子は.java
 *			※大文字、小文字は区別される
 *			※空白の部分は半角空白かダブ文字を使用します
 *			例：Java_SilverSE8_C001_S001.java
 *		2_コンパイル
 *			Java開発環境で提供されているJavacコマンド（コンパイラ）を使用してコンパイルします。
 *			ソースファイルをコンパイルすることで、Java実行環境（JVM）が解釈できるファイルが生成されます。
 *			ソースファイル（.java）→クラスファイル（.class）
 *		3_実行
 *			コンパイルで自動生成されたファイルを元にプログラムを実行します。
 *			Java開発環境で提供されているjavaコマンドを使用します。
 *		4_エラー
 *			4_1_コンパイルエラー
 *				プログラムに文法的な誤りがあると、コンパイル時にエラーメッセージが表示されます。
 *				これをコンパイルエラーと言います。
 *				この場合は、プログラムを見直して誤りを修正する必要があります。
 *				エラーメッセージがなくなるまで修正作業（デバック）を繰り返します。
 *				例：
 *				public static void main(string[] args){}
 *				public static main(String[] args){}
 *				public static void main(String[]){}
 *			4_2_実行エラー
 *				コンパイルが成功しプログラムを実行しても、それが正しく動作するとは限りません。
 *				正しく動作しない場合は、実行エラーが発生することがあります。
 *				その場合は、原因を突き止めソースファイルを修正し、
 *				再度コンパイル、実行をして確認する必要があります。
 *				例：
 *				public static void main(String args){}
 *				public void main(String[] args)
 *				public static void Main(string[] args){}	
 *	リテラル
 *		1_整数リテラル
 *		2_浮動小数点リテラル
 *		3_文字リテラル
 *		4_文字列リテラル
 *		5_論理値リテラル
 *		6_nullリテラル
 *	変数や定数の宣言と初期化 
 *	変数のスコープ
 *
 */
